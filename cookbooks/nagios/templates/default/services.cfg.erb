# Nagios Service Definitions.
#
# Automatically generated by Chef.

define service {
    use                 default-service
    host_name           *
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}

# monitoring service checks
define service {
    service_description Nagios
    hostgroup_name      <%= node['nagios']['server_role'] %>
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}

# Uncomment if you're using Munin
#define service {
#    service_description Munin Client
#    hostgroup_name      all
#    check_command       check_tcp!4949
#    use                 default-service
#}

# default checks for all hosts
# Uncomment if you're running chef-client as a daemon
#define service {
#    service_description Chef Client
#    hostgroup_name     base
#    check_command      check_chef_client
#    use                default-service
#}

define service {
    service_description Free Space All Disks
    hostgroup_name      all
    check_command       check_all_disks
    use                 default-service
}

define service {
    service_description Load Average
    hostgroup_name      all
    check_command       check_load
    use                 default-service
}

define service {
    service_description Free Memory
    hostgroup_name      all
    check_command       check_mem
    use                 default-service
}

define service {
    service_description SSH
    hostgroup_name      all
    check_command       check_ssh
    use                 default-service
}

define service {
    service_description Processes
    hostgroup_name      all
    check_command       check_local_procs
    use                 default-service
}

<% unless @service_hosts['monitoring'].nil? -%>
# If the monitoring host is a postfix relay, uncomment this.
#define service {
#    service_description Postfix
#    hostgroup_name      monitoring
#    check_command       check_nrpe!check_smtp
#    use                 default-service
#}

# If the monitoring host is a syslog server, uncomment this.
#define service {
#    service_description Rsyslog
#    hostgroup_name      monitoring
#    check_command       check_tcp!514
#    use                 default-service
#}

<% end -%>
<% unless @service_hosts['nginx-server'].nil? -%>
# basic web server http check
define service {
    service_description HTTP Processes
    hostgroup_name      nginx-server
    check_command       check_http
    use                 default-service
}

<% end -%>
<% unless @service_hosts['gunicorn-server'].nil? -%>

define service {
    service_description GUnicorn HTTP
    hostgroup_name      gunicorn-server
    check_command       check_http_port_expect!8080!"HTTP/1.1 302 Found"
    use                 default-service
}

<% end -%>
<% unless @service_hosts['redis-server'].nil? -%>
# I would configure redis if I had one! 6379
#define service {
#    service_description Redis
#    hostgroup_name      redis-server
#    check_command       check_tcp!6379
#    use                 default-service
#}
#
<% end -%>
